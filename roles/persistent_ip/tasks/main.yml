############################################
#  Capgemini_PROLOG_BEGIN_TAG
#  This is an automatically generated prolog.
#
#  Copyright (C) Capgemini Engineering ACT S.A.S. 2016-2023. All rights reserved.
#
#  Capgemini_PROLOG_END_TAG
###########################################

---
# Define variable for repeated condition
- name: Set current node condition
  set_fact:
    is_current_node: "{{ inventory_hostname == NODE_DETAILS[0].ip }}"
  tags:
    - always

- block:
  ######### Validation ##################
  # Find python path from /hosts file.
  - name: Find python path from /hosts file.
    shell: grep 'python' /hosts |awk -F '=' '{print $2}'|tr -d \'
    register: python
    connection: local
    ignore_errors: true
    changed_when: false
    when: is_current_node

  - set_fact:
      python_path: "{{python.stdout}}"
    when: python is succeeded and is_current_node

  - name: Error Fail to get the python path from /hosts file.
    fail:
      msg: "Fail to get the python path from /hosts file. Please provide the exact python path in hosts file"
    when: python is failed and is_current_node
    any_errors_fatal: yes

  - name: Validating input information
    ansible.builtin.raw: "{{python_path}} /plugins/modules/PERSISTENT_IP_plugin.py 'create' "
    connection: local
    ignore_errors: true
    when: is_current_node
    register: output
    changed_when: false

  - name: Passed output
    debug:
      msg: "Input information validated successfully."
    when: is_current_node and (output.rc == 0)

  - name: Failed output
    fail:
      msg: "{{output.stdout}}"
    any_errors_fatal: true
    when: is_current_node and (output.rc != 0)

  ######################################

  # Check if cluster exists
  - name: Check if cluster exists
    shell: /usr/es/sbin/cluster/utilities/clmgr query cluster
    ignore_errors: true
    when: is_current_node
    register: cluster_exists
    changed_when: false

  # Display messages for cluster existence
  - name: Display message if cluster exists
    debug:
      msg: "As expected Cluster already exists."
    when: cluster_exists is succeeded and is_current_node

  - name: Display message if cluster doesn't exist
    fail:
      msg: "Cluster doesn't exist."
    any_errors_fatal: true
    when: cluster_exists is failed and is_current_node

  - name: Creation Part for PERSISTENT_IP
    include_tasks: persistent_ip_create.yml
    loop: "{{ PERSISTENT_IP }}"

  # Verify and Sync (Create)
  - name: Verify and Sync (Create)
    shell: /usr/es/sbin/cluster/utilities/cldare -rt -C yes
    async: 3600     # Maximum allowed time in Seconds
    poll: 15        # Polling Interval in Seconds
    register: cluster_sync_create_da
    any_errors_fatal: true
    when:
      - is_current_node

  - name: Cluster sync passed (Create)
    debug:
      msg: "Cluster synced successfully."
    when:
      - cluster_sync_create_da is succeeded
      - is_current_node

  when: PERSISTENT_IP is defined
  tags:
    - create

- block:
  ######### Validation ##################
  # Find python path from /hosts file.
  - name: Find python path from /hosts file.
    shell: grep 'python' /hosts |awk -F '=' '{print $2}'|tr -d \'
    register: python
    connection: local
    ignore_errors: true
    changed_when: false
    when: is_current_node

  - set_fact:
      python_path: "{{python.stdout}}"
    when: python is succeeded and is_current_node

  - name: Error Fail to get the python path from /hosts file.
    fail:
      msg: "Fail to get the python path from /hosts file. Please provide the exact python path in hosts file"
    when: python is failed and is_current_node
    any_errors_fatal: yes

  - name: Validating input information
    ansible.builtin.raw: "{{python_path}} /plugins/modules/PERSISTENT_IP_plugin.py 'delete' "
    connection: local
    ignore_errors: true
    when: is_current_node
    register: output
    changed_when: false

  - name: Passed output
    debug:
      msg: "Input information validated successfully."
    when: is_current_node and (output.rc == 0)

  - name: Failed output
    fail:
      msg: "{{output.stdout}}"
    any_errors_fatal: true
    when: is_current_node and (output.rc != 0)

  ######################################

  # Check if cluster exists
  - name: Check if cluster exists
    shell: /usr/es/sbin/cluster/utilities/clmgr query cluster
    ignore_errors: true
    when: is_current_node
    register: cluster_exists

  # Display messages for cluster existence
  - name: Display message if cluster exists
    debug:
      msg: "Cluster already exists."
    when: cluster_exists is succeeded and is_current_node

  - name: Display message if cluster doesn't exist
    fail:
      msg: "Cluster doesn't exist."
    any_errors_fatal: true
    when: cluster_exists is failed and is_current_node

  - name: Deletion Part for PERSISTENT_IP
    include_tasks: persistent_ip_delete.yml
    loop: "{{ PERSISTENT_IP }}"

  # Verify and Sync (Delete)
  - name: Verify and Sync (Delete)
    shell: /usr/es/sbin/cluster/utilities/cldare -rt -C yes
    async: 3600     # Maximum allowed time in Seconds
    poll: 15        # Polling Interval in Seconds
    register: cluster_sync_delete
    any_errors_fatal: true
    when:
      - is_current_node

  - name: Cluster sync passed (Delete)
    debug:
      msg: "Cluster synced successfully."
    when:
      - cluster_sync_delete is succeeded
      - is_current_node

  when: PERSISTENT_IP is defined
  tags:
    - delete

- name: Display message if PERSISTENT_IP details are not defined.
  debug:
    msg: "Define the PERSISTENT_IP details in /external_var.yml file and run again."
  when: 
    - PERSISTENT_IP is not defined
    - Using_for_Cloud_catalog is defined
    - is_current_node
  tags:
    - always

- name: Error message if PERSISTENT_IP details are not defined.
  fail:
    msg: "Define the PERSISTENT_IP details in /external_var.yml file and run again."
  any_errors_fatal: yes
  when: 
    - PERSISTENT_IP is not defined
    - Using_for_Cloud_catalog is not defined
    - is_current_node
  tags:
    - always
